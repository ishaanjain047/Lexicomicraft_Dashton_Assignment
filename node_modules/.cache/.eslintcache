[{"/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/index.js":"1","/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/reportWebVitals.js":"2","/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/App.js":"3","/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Generator/index.js":"4","/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Homepage/index.js":"5","/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Comic/index.js":"6","/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Generator/PanelGenerator/index.js":"7","/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Navbar/index.js":"8","/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Homepage/Benifits/index.js":"9","/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Comic/Panel/index.js":"10","/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Homepage/Landing/index.js":"11","/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Navbar/DashtoonRoutes.js":"12","/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Generator/PanelInput/index.js":"13"},{"size":535,"mtime":1699785423898,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1699785423898,"results":"16","hashOfConfig":"15"},{"size":1209,"mtime":1699796656428,"results":"17","hashOfConfig":"15"},{"size":643,"mtime":1699796725819,"results":"18","hashOfConfig":"15"},{"size":725,"mtime":1699793524336,"results":"19","hashOfConfig":"15"},{"size":1110,"mtime":1699785423896,"results":"20","hashOfConfig":"15"},{"size":3580,"mtime":1699796736906,"results":"21","hashOfConfig":"15"},{"size":933,"mtime":1699797037618,"results":"22","hashOfConfig":"15"},{"size":2071,"mtime":1699797930614,"results":"23","hashOfConfig":"15"},{"size":227,"mtime":1699785423896,"results":"24","hashOfConfig":"15"},{"size":762,"mtime":1699793892791,"results":"25","hashOfConfig":"15"},{"size":151,"mtime":1699785423897,"results":"26","hashOfConfig":"15"},{"size":1341,"mtime":1699797449440,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"vuwkmp",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},"/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/index.js",[],[],["71","72","73","74","75","76"],"/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/reportWebVitals.js",[],[],"/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/App.js",[],[],"/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Generator/index.js",[],[],"/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Homepage/index.js",[],[],"/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Comic/index.js",[],[],"/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Generator/PanelGenerator/index.js",["77"],[],"import React from 'react'\nimport PanelInput from '../PanelInput';\nimport \"./index.css\";\nimport { useNavigate } from 'react-router-dom';\nimport { v4 as uuid } from \"uuid\";\nconst PanelGenerator = ({\n  panels,\n  setPanels,\n}) => {\n  const navigate = useNavigate();\n  const generateComic = () => {\n    let cnt = 0;\n    console.log(\"panels is \", panels);\n    panels.map((panel) => {\n      if (\n        panel.imgsrc !== null &&\n        panel.imgsrc !== undefined &&\n        panel.imgsrc !== \"\"\n      ) {\n        cnt++;\n      }\n    });\n    console.log(\"cnt is \", cnt);\n    if (cnt < 10) {\n      alert(\"Atleast 10 panels should be created\");\n      return;\n    }\n    navigate(\"/comic\");\n  };\n\n  const generate = async (textval, id) => {\n    if(textval===\"\"){\n      alert(\"Input is empty\");\n      return;\n    }\n    const obj = { inputs: `${textval}` };\n       setPanels((current) =>\n         current.map((panel) => {\n           if (panel.id === id) {\n             return { ...panel, desc: textval, loading: true };\n           }\n           return panel;\n         })\n       );\n    const response = await fetch(\n      \"https://xdwvg9no7pefghrn.us-east-1.aws.endpoints.huggingface.cloud\",\n      {\n        headers: {\n          Accept: \"image/png\",\n          Authorization:\n            \"Bearer VknySbLLTUjbxXAXCjyfaFIPwUTCeRXbFSOjwRiCxsxFyhbnGjSFalPKrpvvDAaPVzWEevPljilLVDBiTzfIbWFdxOkYJxnOPoHhkkVGzAknaOulWggusSFewzpqsNWM\",\n          \"Content-Type\": \"application/json\",\n        },\n        method: \"POST\",\n        body: JSON.stringify(obj),\n      }\n    );\n    const result = await response.blob();\n    let url = URL.createObjectURL(result);\n\n    setPanels((current) =>\n      current.map((panel) => {\n        if (panel.id === id) {\n          return { ...panel, desc: textval, imgsrc: url, loading: false };\n        }\n        return panel;\n      })\n    );\n  };\n\n  const deletePanel = (panelId) => {\n    setPanels((prevPanels) =>\n      prevPanels.filter((panel) => panel.id !== panelId)\n    );\n  };\n\n   const handleTextChange = (e, panelId) => {\n     const updatedPanels = panels.map((panel) => {\n       if (panel.id === panelId) {\n         return { ...panel, desc: e.target.value };\n       }\n       return panel;\n     });\n\n     setPanels(updatedPanels);\n   };\n\n  const addPanel = () => {\n    setPanels((s) => {\n      const unique_id = uuid();\n      const newObj = {\n        id: unique_id,\n        desc: \"\",\n        imgsrc: \"\",\n        loading:false\n      };\n      return [...s, newObj];\n    });\n  };\n  return (\n    <div className=\"panelGeneratorWrapper\">\n      <div className=\"panelInputs\">\n        {panels.map((item, key) => {\n          console.log(\"item is \", item);\n          return (\n            <div className=\"addedPanel\" key={key}>\n              <PanelInput\n                loading={item.loading}\n                desc={item.desc}\n                imagesrc={item.imgsrc}\n                handleTextChange={(e) => handleTextChange(e, item.id)}\n                generate={() => generate(item.desc, item.id)}\n                deletePanel={() => deletePanel(item.id)}\n              ></PanelInput>\n            </div>\n          );\n        })}\n      </div>\n      <div className=\"addAndSubmit\">\n        <div className=\"addMoreBtnCon\">\n          <button className=\"addMoreBtn Btn\" onClick={addPanel}>\n            Add More Panels\n          </button>\n        </div>\n        <div className=\"submitButton\">\n          <button className=\"finalGenerateBtn Btn\" onClick={generateComic}>\n            Generate Comic !\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PanelGenerator","/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Navbar/index.js",[],[],"/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Homepage/Benifits/index.js",[],[],"/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Comic/Panel/index.js",[],[],"/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Homepage/Landing/index.js",[],[],"/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Navbar/DashtoonRoutes.js",[],[],"/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Generator/PanelInput/index.js",["78"],[],"import React from 'react'\nimport deleteImg from \"../../../assets/delete.png\"\nimport \"./index.css\";\nimport insert_image from \"../../../assets/Insert_image.png\";\nconst PanelInput = ({\n  loading,\n  handleTextChange,\n  deletePanel,\n  generate,\n  desc,\n  imagesrc,\n}) => {\n  console.log(\"imagesrc is \", imagesrc);\n  return (\n    <div className=\"generatedWrapper\">\n      <div className=\"generateImageWrapper\">\n        <img\n          className=\"generatedImage\"\n          src={imagesrc ? imagesrc : insert_image}\n        />\n      </div>\n      <div className=\"panelText\">\n        <input\n          className=\"inputPanel\"\n          placeholder=\"Enter text to get comic panel\"\n          onChange={handleTextChange}\n          value={desc}\n        ></input>\n      </div>\n      <div className=\"generateAndDelete\">\n        <div className=\"generateButtonCon\">\n          <button\n            className=\"generateBtn Btn\"\n            style={{ backgroundColor: loading ? \"rgb(200,35,25)\" : \"#0096FF\" }}\n            onClick={generate}\n            disabled={loading ? true : false}\n          >\n            {loading ? \"Generating\" : \"Generate\"}\n          </button>\n        </div>\n        <div className=\"panelDeleteBtn\" onClick={deletePanel}>\n          <img alt=\"deleteBtn\" src={deleteImg} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PanelInput",["79","80","81","82","83","84"],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":14,"column":24,"nodeType":"99","messageId":"100","endLine":14,"endColumn":26},{"ruleId":"101","severity":1,"message":"102","line":17,"column":9,"nodeType":"103","endLine":20,"endColumn":11},{"ruleId":"85","replacedBy":"104"},{"ruleId":"87","replacedBy":"105"},{"ruleId":"89","replacedBy":"106"},{"ruleId":"91","replacedBy":"107"},{"ruleId":"93","replacedBy":"108"},{"ruleId":"95","replacedBy":"109"},"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["110"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",[],[],[],["110"],[],[],"no-object-constructor"]