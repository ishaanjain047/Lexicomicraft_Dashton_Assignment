[{"/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/index.js":"1","/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/reportWebVitals.js":"2","/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/App.js":"3","/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Generator/index.js":"4","/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Homepage/index.js":"5","/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Comic/index.js":"6","/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Generator/PanelGenerator/index.js":"7","/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Navbar/index.js":"8","/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Homepage/Benifits/index.js":"9","/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Comic/Panel/index.js":"10","/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Homepage/Landing/index.js":"11","/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Navbar/DashtoonRoutes.js":"12","/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Generator/PanelInput/index.js":"13","/Users/ishaanjain/Desktop/Dashtoon-error/Lexicomicraft_Dashton_Assignment/src/index.js":"14","/Users/ishaanjain/Desktop/Dashtoon-error/Lexicomicraft_Dashton_Assignment/src/App.js":"15","/Users/ishaanjain/Desktop/Dashtoon-error/Lexicomicraft_Dashton_Assignment/src/reportWebVitals.js":"16","/Users/ishaanjain/Desktop/Dashtoon-error/Lexicomicraft_Dashton_Assignment/src/components/Homepage/index.js":"17","/Users/ishaanjain/Desktop/Dashtoon-error/Lexicomicraft_Dashton_Assignment/src/components/Comic/index.js":"18","/Users/ishaanjain/Desktop/Dashtoon-error/Lexicomicraft_Dashton_Assignment/src/components/Navbar/index.js":"19","/Users/ishaanjain/Desktop/Dashtoon-error/Lexicomicraft_Dashton_Assignment/src/components/Generator/index.js":"20","/Users/ishaanjain/Desktop/Dashtoon-error/Lexicomicraft_Dashton_Assignment/src/components/Homepage/Benifits/index.js":"21","/Users/ishaanjain/Desktop/Dashtoon-error/Lexicomicraft_Dashton_Assignment/src/components/Homepage/Landing/index.js":"22","/Users/ishaanjain/Desktop/Dashtoon-error/Lexicomicraft_Dashton_Assignment/src/components/Comic/Panel/index.js":"23","/Users/ishaanjain/Desktop/Dashtoon-error/Lexicomicraft_Dashton_Assignment/src/components/Navbar/DashtoonRoutes.js":"24","/Users/ishaanjain/Desktop/Dashtoon-error/Lexicomicraft_Dashton_Assignment/src/components/Generator/PanelGenerator/index.js":"25","/Users/ishaanjain/Desktop/Dashtoon-error/Lexicomicraft_Dashton_Assignment/src/components/Generator/PanelInput/index.js":"26"},{"size":535,"mtime":1699785423898,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1699785423898,"results":"29","hashOfConfig":"28"},{"size":1209,"mtime":1699796656428,"results":"30","hashOfConfig":"28"},{"size":643,"mtime":1699796725819,"results":"31","hashOfConfig":"28"},{"size":725,"mtime":1699793524336,"results":"32","hashOfConfig":"28"},{"size":1110,"mtime":1699785423896,"results":"33","hashOfConfig":"28"},{"size":3580,"mtime":1699796736906,"results":"34","hashOfConfig":"28"},{"size":933,"mtime":1699797037618,"results":"35","hashOfConfig":"28"},{"size":2071,"mtime":1699797930614,"results":"36","hashOfConfig":"28"},{"size":227,"mtime":1699785423896,"results":"37","hashOfConfig":"28"},{"size":762,"mtime":1699793892791,"results":"38","hashOfConfig":"28"},{"size":151,"mtime":1699785423897,"results":"39","hashOfConfig":"28"},{"size":1341,"mtime":1699797449440,"results":"40","hashOfConfig":"28"},{"size":411,"mtime":1699830951809,"results":"41","hashOfConfig":"42"},{"size":1139,"mtime":1699830935195,"results":"43","hashOfConfig":"42"},{"size":362,"mtime":1699824063789,"results":"44","hashOfConfig":"42"},{"size":725,"mtime":1699824063789,"results":"45","hashOfConfig":"42"},{"size":1097,"mtime":1699829956392,"results":"46","hashOfConfig":"42"},{"size":1043,"mtime":1699831050697,"results":"47","hashOfConfig":"42"},{"size":643,"mtime":1699824063788,"results":"48","hashOfConfig":"42"},{"size":2071,"mtime":1699824063788,"results":"49","hashOfConfig":"42"},{"size":762,"mtime":1699824063788,"results":"50","hashOfConfig":"42"},{"size":227,"mtime":1699824063787,"results":"51","hashOfConfig":"42"},{"size":155,"mtime":1699831036106,"results":"52","hashOfConfig":"42"},{"size":4007,"mtime":1700009075242,"results":"53","hashOfConfig":"42"},{"size":1341,"mtime":1699824063788,"results":"54","hashOfConfig":"42"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"vuwkmp",{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1y5pt5a",{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},"/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/index.js",[],[],["139","140","141","142","143","144"],"/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/reportWebVitals.js",[],[],"/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/App.js",[],[],"/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Generator/index.js",[],[],"/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Homepage/index.js",[],[],"/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Comic/index.js",[],[],"/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Generator/PanelGenerator/index.js",["145"],[],"import React from 'react'\nimport PanelInput from '../PanelInput';\nimport \"./index.css\";\nimport { useNavigate } from 'react-router-dom';\nimport { v4 as uuid } from \"uuid\";\nconst PanelGenerator = ({\n  panels,\n  setPanels,\n}) => {\n  const navigate = useNavigate();\n  const generateComic = () => {\n    let cnt = 0;\n    console.log(\"panels is \", panels);\n    panels.map((panel) => {\n      if (\n        panel.imgsrc !== null &&\n        panel.imgsrc !== undefined &&\n        panel.imgsrc !== \"\"\n      ) {\n        cnt++;\n      }\n    });\n    console.log(\"cnt is \", cnt);\n    if (cnt < 10) {\n      alert(\"Atleast 10 panels should be created\");\n      return;\n    }\n    navigate(\"/comic\");\n  };\n\n  const generate = async (textval, id) => {\n    if(textval===\"\"){\n      alert(\"Input is empty\");\n      return;\n    }\n    const obj = { inputs: `${textval}` };\n       setPanels((current) =>\n         current.map((panel) => {\n           if (panel.id === id) {\n             return { ...panel, desc: textval, loading: true };\n           }\n           return panel;\n         })\n       );\n    const response = await fetch(\n      \"https://xdwvg9no7pefghrn.us-east-1.aws.endpoints.huggingface.cloud\",\n      {\n        headers: {\n          Accept: \"image/png\",\n          Authorization:\n            \"Bearer VknySbLLTUjbxXAXCjyfaFIPwUTCeRXbFSOjwRiCxsxFyhbnGjSFalPKrpvvDAaPVzWEevPljilLVDBiTzfIbWFdxOkYJxnOPoHhkkVGzAknaOulWggusSFewzpqsNWM\",\n          \"Content-Type\": \"application/json\",\n        },\n        method: \"POST\",\n        body: JSON.stringify(obj),\n      }\n    );\n    const result = await response.blob();\n    let url = URL.createObjectURL(result);\n\n    setPanels((current) =>\n      current.map((panel) => {\n        if (panel.id === id) {\n          return { ...panel, desc: textval, imgsrc: url, loading: false };\n        }\n        return panel;\n      })\n    );\n  };\n\n  const deletePanel = (panelId) => {\n    setPanels((prevPanels) =>\n      prevPanels.filter((panel) => panel.id !== panelId)\n    );\n  };\n\n   const handleTextChange = (e, panelId) => {\n     const updatedPanels = panels.map((panel) => {\n       if (panel.id === panelId) {\n         return { ...panel, desc: e.target.value };\n       }\n       return panel;\n     });\n\n     setPanels(updatedPanels);\n   };\n\n  const addPanel = () => {\n    setPanels((s) => {\n      const unique_id = uuid();\n      const newObj = {\n        id: unique_id,\n        desc: \"\",\n        imgsrc: \"\",\n        loading:false\n      };\n      return [...s, newObj];\n    });\n  };\n  return (\n    <div className=\"panelGeneratorWrapper\">\n      <div className=\"panelInputs\">\n        {panels.map((item, key) => {\n          console.log(\"item is \", item);\n          return (\n            <div className=\"addedPanel\" key={key}>\n              <PanelInput\n                loading={item.loading}\n                desc={item.desc}\n                imagesrc={item.imgsrc}\n                handleTextChange={(e) => handleTextChange(e, item.id)}\n                generate={() => generate(item.desc, item.id)}\n                deletePanel={() => deletePanel(item.id)}\n              ></PanelInput>\n            </div>\n          );\n        })}\n      </div>\n      <div className=\"addAndSubmit\">\n        <div className=\"addMoreBtnCon\">\n          <button className=\"addMoreBtn Btn\" onClick={addPanel}>\n            Add More Panels\n          </button>\n        </div>\n        <div className=\"submitButton\">\n          <button className=\"finalGenerateBtn Btn\" onClick={generateComic}>\n            Generate Comic !\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PanelGenerator","/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Navbar/index.js",[],[],"/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Homepage/Benifits/index.js",[],[],"/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Comic/Panel/index.js",[],[],"/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Homepage/Landing/index.js",[],[],"/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Navbar/DashtoonRoutes.js",[],[],"/Users/ishaanjain/Desktop/dashtoon-assgn/Dashtoon-assignment/src/components/Generator/PanelInput/index.js",["146"],[],"import React from 'react'\nimport deleteImg from \"../../../assets/delete.png\"\nimport \"./index.css\";\nimport insert_image from \"../../../assets/Insert_image.png\";\nconst PanelInput = ({\n  loading,\n  handleTextChange,\n  deletePanel,\n  generate,\n  desc,\n  imagesrc,\n}) => {\n  console.log(\"imagesrc is \", imagesrc);\n  return (\n    <div className=\"generatedWrapper\">\n      <div className=\"generateImageWrapper\">\n        <img\n          className=\"generatedImage\"\n          src={imagesrc ? imagesrc : insert_image}\n        />\n      </div>\n      <div className=\"panelText\">\n        <input\n          className=\"inputPanel\"\n          placeholder=\"Enter text to get comic panel\"\n          onChange={handleTextChange}\n          value={desc}\n        ></input>\n      </div>\n      <div className=\"generateAndDelete\">\n        <div className=\"generateButtonCon\">\n          <button\n            className=\"generateBtn Btn\"\n            style={{ backgroundColor: loading ? \"rgb(200,35,25)\" : \"#0096FF\" }}\n            onClick={generate}\n            disabled={loading ? true : false}\n          >\n            {loading ? \"Generating\" : \"Generate\"}\n          </button>\n        </div>\n        <div className=\"panelDeleteBtn\" onClick={deletePanel}>\n          <img alt=\"deleteBtn\" src={deleteImg} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PanelInput",["147","148","149","150","151","152"],"/Users/ishaanjain/Desktop/Dashtoon-error/Lexicomicraft_Dashton_Assignment/src/index.js",[],[],"/Users/ishaanjain/Desktop/Dashtoon-error/Lexicomicraft_Dashton_Assignment/src/App.js",["153"],[],"import './App.css';\nimport React,{useState,useEffect} from 'react';\nimport Homepage from \"./components/Homepage\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Comic from './components/Comic';\nimport { v4 as uuid } from \"uuid\";\n\nconst unique_id = uuid();\n\nconst newPanelObj = [\n  {\n    id: unique_id,\n    desc: \"\",\n    imgsrc: \"\",\n    loading: false,\n  },\n];\n\nlet savedPanels = JSON.parse(\n  localStorage.getItem('panels')\n);\nif(!savedPanels) savedPanels = newPanelObj;\n\nfunction App() {\n  const [panels, setPanels] = useState(savedPanels);\n  \n\n\tuseEffect(() => {\n\t\tconst savedPanels = JSON.parse(\n\t\t\tlocalStorage.getItem('panels')\n\t\t);\n\n\t\tif (savedPanels) {\n\t\t\tsetPanels(savedPanels);\n\t\t}\n\t}, []);\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(\n\t\t\t'panels',\n\t\t\tJSON.stringify(panels)\n\t\t);\n\t}, [panels]);\n\n  return (\n    <div className=\"appWrapper\">\n        <Routes>\n          <Route path=\"/\" element={<Homepage panels={panels} setPanels={setPanels}/>} />\n          <Route path=\"/comic\" element={<Comic panels={panels} setPanels={setPanels}  />} />\n        </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/ishaanjain/Desktop/Dashtoon-error/Lexicomicraft_Dashton_Assignment/src/reportWebVitals.js",[],[],"/Users/ishaanjain/Desktop/Dashtoon-error/Lexicomicraft_Dashton_Assignment/src/components/Homepage/index.js",[],[],"/Users/ishaanjain/Desktop/Dashtoon-error/Lexicomicraft_Dashton_Assignment/src/components/Comic/index.js",[],[],"/Users/ishaanjain/Desktop/Dashtoon-error/Lexicomicraft_Dashton_Assignment/src/components/Navbar/index.js",[],[],"/Users/ishaanjain/Desktop/Dashtoon-error/Lexicomicraft_Dashton_Assignment/src/components/Generator/index.js",[],[],"/Users/ishaanjain/Desktop/Dashtoon-error/Lexicomicraft_Dashton_Assignment/src/components/Homepage/Benifits/index.js",[],[],"/Users/ishaanjain/Desktop/Dashtoon-error/Lexicomicraft_Dashton_Assignment/src/components/Homepage/Landing/index.js",[],[],"/Users/ishaanjain/Desktop/Dashtoon-error/Lexicomicraft_Dashton_Assignment/src/components/Comic/Panel/index.js",[],[],"/Users/ishaanjain/Desktop/Dashtoon-error/Lexicomicraft_Dashton_Assignment/src/components/Navbar/DashtoonRoutes.js",[],[],"/Users/ishaanjain/Desktop/Dashtoon-error/Lexicomicraft_Dashton_Assignment/src/components/Generator/PanelGenerator/index.js",["154"],[],"import React from 'react'\nimport PanelInput from '../PanelInput';\nimport \"./index.css\";\nimport { useNavigate } from 'react-router-dom';\nimport { v4 as uuid } from \"uuid\";\nconst PanelGenerator = ({\n  panels,\n  setPanels,\n}) => {\n  const navigate = useNavigate();\n  const generateComic = () => {\n    let cnt = 0;\n    console.log(\"panels is \", panels);\n    panels.map((panel) => {\n      if (\n        panel.imgsrc !== null &&\n        panel.imgsrc !== undefined &&\n        panel.imgsrc !== \"\"\n      ) {\n        cnt++;\n      }\n    });\n    console.log(\"cnt is \", cnt);\n    if (cnt < 10) {\n      alert(\"Atleast 10 panels should be created\");\n      return;\n    }\n    navigate(\"/comic\");\n  };\n\n  const generate = async (textval, id) => {\n    if(textval===\"\"){\n      alert(\"Input is empty\");\n      return;\n    }\n    const obj = { inputs: `${textval}` };\n       setPanels((current) =>\n         current.map((panel) => {\n           if (panel.id === id) {\n             return { ...panel, desc: textval, loading: true };\n           }\n           return panel;\n         })\n       );\n    try{\n      const response = await fetch(\n        \"https://xdwvg9no7pefghrn.us-east-1.aws.endpoints.huggingface.cloud\",\n        {\n          headers: {\n            Accept: \"image/png\",\n            Authorization:\n              \"Bearer VknySbLLTUjbxXAXCjyfaFIPwUTCeRXbFSOjwRiCxsxFyhbnGjSFalPKrpvvDAaPVzWEevPljilLVDBiTzfIbWFdxOkYJxnOPoHhkkVGzAknaOulWggusSFewzpqsNWM\",\n            \"Content-Type\": \"application/json\",\n          },\n          method: \"POST\",\n          body: JSON.stringify(obj),\n        }\n      );\n      const result = await response.blob();\n      let url = URL.createObjectURL(result);\n      console.log(\"url is \",url);\n      setPanels((current) =>\n        current.map((panel) => {\n          if (panel.id === id) {\n            return { ...panel, desc: textval, imgsrc: url, loading: false };\n          }\n          return panel;\n        })\n      );\n    }\n    catch(error){\n      setPanels((current) =>\n        current.map((panel) => {\n          if (panel.id === id) {\n            return { ...panel, loading: false };\n          }\n          return panel;\n        })\n      );\n      console.error('Error:', error);\n      alert(\"The API is currently not responding ! Kindly try later\");\n    }\n  };\n\n  const deletePanel = (panelId) => {\n    setPanels((prevPanels) =>\n      prevPanels.filter((panel) => panel.id !== panelId)\n    );\n  };\n\n   const handleTextChange = (e, panelId) => {\n     const updatedPanels = panels.map((panel) => {\n       if (panel.id === panelId) {\n         return { ...panel, desc: e.target.value };\n       }\n       return panel;\n     });\n\n     setPanels(updatedPanels);\n   };\n\n  const addPanel = () => {\n    setPanels((s) => {\n      const unique_id = uuid();\n      const newObj = {\n        id: unique_id,\n        desc: \"\",\n        imgsrc: \"\",\n        loading:false\n      };\n      return [...s, newObj];\n    });\n  };\n  return (\n    <div className=\"panelGeneratorWrapper\">\n      <div className=\"panelInputs\">\n        {panels.map((item, key) => {\n          console.log(\"item is \", item);\n          return (\n            <div className=\"addedPanel\" key={key}>\n              <PanelInput\n                loading={item.loading}\n                desc={item.desc}\n                imagesrc={item.imgsrc}\n                handleTextChange={(e) => handleTextChange(e, item.id)}\n                generate={() => generate(item.desc, item.id)}\n                deletePanel={() => deletePanel(item.id)}\n              ></PanelInput>\n            </div>\n          );\n        })}\n      </div>\n      <div className=\"addAndSubmit\">\n        <div className=\"addMoreBtnCon\">\n          <button className=\"addMoreBtn Btn\" onClick={addPanel}>\n            Add More Panels\n          </button>\n        </div>\n        <div className=\"submitButton\">\n          <button className=\"finalGenerateBtn Btn\" onClick={generateComic}>\n            Generate Comic !\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PanelGenerator","/Users/ishaanjain/Desktop/Dashtoon-error/Lexicomicraft_Dashton_Assignment/src/components/Generator/PanelInput/index.js",["155"],[],{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":14,"column":24,"nodeType":"170","messageId":"171","endLine":14,"endColumn":26},{"ruleId":"172","severity":1,"message":"173","line":17,"column":9,"nodeType":"174","endLine":20,"endColumn":11},{"ruleId":"156","replacedBy":"175"},{"ruleId":"158","replacedBy":"176"},{"ruleId":"160","replacedBy":"177"},{"ruleId":"162","replacedBy":"178"},{"ruleId":"164","replacedBy":"179"},{"ruleId":"166","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":4,"column":27,"nodeType":"183","messageId":"184","endLine":4,"endColumn":33},{"ruleId":"168","severity":1,"message":"169","line":14,"column":24,"nodeType":"170","messageId":"171","endLine":14,"endColumn":26},{"ruleId":"172","severity":1,"message":"173","line":17,"column":9,"nodeType":"174","endLine":20,"endColumn":11},"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["185"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",[],[],[],["185"],[],[],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-object-constructor"]